openapi: 3.0.2
info:
  version: 1.0.0
  title: Basic API
  description: A basic API with specifications for a pet store
  termsOfService: http://example.com/terms/
  contact:
    name: API Support
    url: http://www.example.com/support
    email: email@me.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://dev.example.com
    description: Development server
  - url: https://staging.example.com
    description: Staging server
  - url: https://api.example.com
    description: Production server
paths:
  /v1/customers:
    get:
      summary: Get all customers
      description: Get all customers from the database
      responses:
        "200":
          description: A list of customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerList"
  /v1/beers:
    get:
      responses:
        "200":
          description: A list of beers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: IPA
                    style:
                      type: string
                      enum:
                        - Ale
                        - Lager
                        - Pilsner
                        - Stout
                        - Porter
                        - Wheat
                        - Sour
                        - Cider
                      #example: Ale
                    upc:
                      type: string
                      #example: 1234567890
                    brewery:
                      type: object
                      #example: Sierra Nevada
                      properties:
                        name:
                          type: string
                          example: Sierra Nevada
                        location:
                          type: object
                          properties:
                            city:
                              type: string
                              example: Chico
                            state:
                              type: string
                              example: CA
        "404":
          description: No beers found
components:
  schemas:
    Address:
      type: object
      properties:
        line1:
          type: string
          example: 123 Main St
        city:
          type: string
          example: Anytown
        stateCode:
          type: string
          minLength: 2
          maxLength: 2
          description: 2 letter state code
          # enum: [AL, AK, AZ, AR, CA, CO, CT, DE, FL, GA, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VT, VA, WA, WV, WI, WY]
          enum:
            - AL
            - AK
            - AZ
            - AR
            - CA
            - CO
            - CT
            - DE
            - FL
            - GA
            - HI
            - ID
            - IL
            - IN
            - IA
            - KS
            - KY
            - LA
            - ME
            - MD
            - MA
            - MI
            - MN
            - MS
            - MO
            - MT
            - NE
            - NV
            - NH
            - NJ
            - NM
            - NY
            - NC
            - ND
            - OH
            - OK
            - OR
            - PA
            - RI
            - SC
            - SD
            - TN
            - TX
            - UT
            - VT
            - VA
            - WA
            - WV
            - WI
            - WY
        zipCode:
          type: string
          example: 12345
    Customer:
      type: object
      description: Customer object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          minLength: 2
          maxLength: 100
          example: John
        lastName:
          type: string
          minLength: 2
          maxLength: 100
          example: Doe
        address:
          $ref: "#/components/schemas/Address"
    CustomerList:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: "#/components/schemas/Customer"